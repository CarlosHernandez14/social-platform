package com.socialmedia.diseno;


import com.socialmedia.manejoarchivos.ManejoArchivos;
import com.socialmedia.modelos.Foto;
import com.socialmedia.modelos.Publicacion;
import com.socialmedia.modelos.ReaccionDePublicacion;
import com.socialmedia.modelos.Perfil;
import com.socialmedia.modelos.Reaccion;
import com.socialmedia.modelos.TipoDeReaccion;
import com.socialmedia.diseno.PanelImageRedondeado;
import com.socialmedia.diseno.RoundedPanel;
import java.awt.FlowLayout;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author CruzZ
 */
public class PanelPublicacion extends JPanel {

    private Publicacion post;
    
    private Perfil profileLogged;
    private InicioPantalla homeWindow;
    
    /**
     * Creates new form PanelPost
     */
    public PanelPublicacion() {
        initComponents();
        
        this.popupReaction.setLayout(new BoxLayout(this.popupReaction, BoxLayout.X_AXIS));
    }
    
    public PanelPublicacion(Publicacion post, Perfil profile, InicioPantalla homeWindow) {
        initComponents();
        
        this.post = post;
        this.profileLogged = profile;
        this.homeWindow = homeWindow;
        this.popupReaction.setLayout(new BoxLayout(this.popupReaction, BoxLayout.X_AXIS));
        
        initData();
    }
    
    private void initData() {
        
        if (!profileLogged.getIdProfile().toString().equals(this.post.getProfileId().toString())) {
            this.buttonEliminar.setVisible(false);
        }
        
        
        this.textDescription.setText(this.post.getDescription());
        
        Perfil profilePost = ManejoArchivos.getProfileById(this.post.getProfileId().toString());
        
        
        this.labelProfileName.setText(profilePost.getName() + " " + profilePost.getLastName());
        
        // Get the image
        Foto postImage = ManejoArchivos.getImagesByPostId(this.post.getIdPost().toString()).getFirst();
        
        //  Load image
        File foto = new File("images/" + postImage.getImage_path());
        
        try {
            byte[] fotoBytes = Files.readAllBytes(foto.toPath());
            
            this.panelImagePost.setIcon(new ImageIcon(fotoBytes));
            
            this.panelImagePost.revalidate();
            this.panelImagePost.repaint();
            
        } catch (IOException ex) {
            System.out.println("Error al obtener la imagen del arhivo");
        }
        
        // Init reactions
        initReactions();
        
        initProfilePostPic(profilePost);
    }
    
    // Method t load panel image profile
    private void initProfilePostPic(Perfil profilePoster) {
        // Load image data
    }
    
    private void initReactions() {
        
        List<ReaccionDePublicacion> postReactions = ManejoArchivos.getPostReactionsByPostId(this.post.getIdPost().toString());
        
        this.labelReactionsCount.setText(postReactions.size() + " reacciones");
        
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupReaction = new javax.swing.JPopupMenu();
        itemLike = new javax.swing.JMenuItem();
        itemLove = new javax.swing.JMenuItem();
        itemSad = new javax.swing.JMenuItem();
        itemAngry = new javax.swing.JMenuItem();
        itemSurprised = new javax.swing.JMenuItem();
        itemFunny = new javax.swing.JMenuItem();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new RoundedPanel(20);
        labelProfileName = new javax.swing.JLabel();
        buttonEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescription = new javax.swing.JTextArea();
        panelImagePost = new org.edisoncor.gui.panel.PanelImage();
        labelReactionsCount = new javax.swing.JLabel();
        buttonLike = new javax.swing.JButton();
        buttonLove = new javax.swing.JButton();
        buttonTriste = new javax.swing.JButton();
        buttonEnojado = new javax.swing.JButton();
        botonAsombro = new javax.swing.JButton();
        buttonRista = new javax.swing.JButton();

        itemLike.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon-like.png"))); // NOI18N
        itemLike.setPreferredSize(new java.awt.Dimension(45, 38));
        itemLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLikeActionPerformed(evt);
            }
        });
        popupReaction.add(itemLike);

        itemLove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/love-emoji.png"))); // NOI18N
        itemLove.setPreferredSize(new java.awt.Dimension(45, 38));
        itemLove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLoveActionPerformed(evt);
            }
        });
        popupReaction.add(itemLove);

        itemSad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/sad-emoji.png"))); // NOI18N
        itemSad.setPreferredSize(new java.awt.Dimension(45, 38));
        itemSad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSadActionPerformed(evt);
            }
        });
        popupReaction.add(itemSad);

        itemAngry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/angry-emoji.png"))); // NOI18N
        itemAngry.setPreferredSize(new java.awt.Dimension(45, 38));
        itemAngry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAngryActionPerformed(evt);
            }
        });
        popupReaction.add(itemAngry);

        itemSurprised.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/surprise-emoji.png"))); // NOI18N
        itemSurprised.setPreferredSize(new java.awt.Dimension(45, 38));
        itemSurprised.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSurprisedActionPerformed(evt);
            }
        });
        popupReaction.add(itemSurprised);

        itemFunny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/funny-emoji.png"))); // NOI18N
        itemFunny.setPreferredSize(new java.awt.Dimension(45, 38));
        itemFunny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemFunnyActionPerformed(evt);
            }
        });
        popupReaction.add(itemFunny);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        labelProfileName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelProfileName.setForeground(new java.awt.Color(102, 102, 102));
        labelProfileName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelProfileName.setText("Nombre publicador");

        buttonEliminar.setBackground(new java.awt.Color(255, 255, 255));
        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelProfileName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProfileName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        textDescription.setEditable(false);
        textDescription.setBackground(new java.awt.Color(255, 255, 255));
        textDescription.setColumns(20);
        textDescription.setForeground(new java.awt.Color(102, 102, 102));
        textDescription.setLineWrap(true);
        textDescription.setRows(5);
        textDescription.setText("Descripcion de la publicacion con algunos comentarios si quieren");
        jScrollPane1.setViewportView(textDescription);

        panelImagePost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/DefaultPostImage.png"))); // NOI18N

        javax.swing.GroupLayout panelImagePostLayout = new javax.swing.GroupLayout(panelImagePost);
        panelImagePost.setLayout(panelImagePostLayout);
        panelImagePostLayout.setHorizontalGroup(
            panelImagePostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelImagePostLayout.setVerticalGroup(
            panelImagePostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );

        labelReactionsCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReactionsCount.setForeground(new java.awt.Color(153, 153, 153));
        labelReactionsCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelReactionsCount.setText("5 reacciones");

        buttonLike.setBackground(new java.awt.Color(255, 255, 255));
        buttonLike.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonLike.setForeground(new java.awt.Color(153, 153, 153));
        buttonLike.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon-like.png"))); // NOI18N
        buttonLike.setBorderPainted(false);
        buttonLike.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLikeActionPerformed(evt);
            }
        });

        buttonLove.setBackground(new java.awt.Color(255, 255, 255));
        buttonLove.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonLove.setForeground(new java.awt.Color(153, 153, 153));
        buttonLove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/love-emoji.png"))); // NOI18N
        buttonLove.setBorderPainted(false);
        buttonLove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonLove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoveActionPerformed(evt);
            }
        });

        buttonTriste.setBackground(new java.awt.Color(255, 255, 255));
        buttonTriste.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonTriste.setForeground(new java.awt.Color(153, 153, 153));
        buttonTriste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/sad-emoji.png"))); // NOI18N
        buttonTriste.setBorderPainted(false);
        buttonTriste.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonTriste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTristeActionPerformed(evt);
            }
        });

        buttonEnojado.setBackground(new java.awt.Color(255, 255, 255));
        buttonEnojado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonEnojado.setForeground(new java.awt.Color(153, 153, 153));
        buttonEnojado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/angry-emoji.png"))); // NOI18N
        buttonEnojado.setBorderPainted(false);
        buttonEnojado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonEnojado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnojadoActionPerformed(evt);
            }
        });

        botonAsombro.setBackground(new java.awt.Color(255, 255, 255));
        botonAsombro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonAsombro.setForeground(new java.awt.Color(153, 153, 153));
        botonAsombro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/surprise-emoji.png"))); // NOI18N
        botonAsombro.setBorderPainted(false);
        botonAsombro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAsombro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAsombroActionPerformed(evt);
            }
        });

        buttonRista.setBackground(new java.awt.Color(255, 255, 255));
        buttonRista.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonRista.setForeground(new java.awt.Color(153, 153, 153));
        buttonRista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/funny-emoji.png"))); // NOI18N
        buttonRista.setBorderPainted(false);
        buttonRista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonRista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(panelImagePost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelReactionsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonLike)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLove)
                        .addGap(18, 18, 18)
                        .addComponent(buttonTriste)
                        .addGap(18, 18, 18)
                        .addComponent(buttonEnojado)
                        .addGap(18, 18, 18)
                        .addComponent(botonAsombro)
                        .addGap(18, 18, 18)
                        .addComponent(buttonRista)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImagePost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelReactionsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(buttonLike, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonLove, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonTriste, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonEnojado, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buttonRista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(botonAsombro, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        // TODO add your handling code here:
        if(ManejoArchivos.deletePost(this.post.getIdPost().toString())) {
            
            this.homeWindow.initHomeData();
            this.homeWindow.initMyPostsData();
            
            JOptionPane.showMessageDialog(null, "Publicacion eliminada con exito");
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar la publicacion");
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void itemLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLikeActionPerformed
        // TODO add your handling code here:
        
        Reaccion like = ManejoArchivos.getReactionByType(TipoDeReaccion.LIKE);
        if (like == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.LIKE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            like = ManejoArchivos.getReactionByType(TipoDeReaccion.LIKE);
        }
        
        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), like.getIdReaction());
        
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");

        
    }//GEN-LAST:event_itemLikeActionPerformed

    private void itemLoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLoveActionPerformed
        // TODO add your handling code here:

        Reaccion love = ManejoArchivos.getReactionByType(TipoDeReaccion.LOVE);
        if (love == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.LOVE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            love = ManejoArchivos.getReactionByType(TipoDeReaccion.LOVE);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), love.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
        

    }//GEN-LAST:event_itemLoveActionPerformed

    private void itemSadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSadActionPerformed
        // TODO add your handling code here:

        Reaccion sad = ManejoArchivos.getReactionByType(TipoDeReaccion.SAD);
        if (sad == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.SAD)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            sad = ManejoArchivos.getReactionByType(TipoDeReaccion.SAD);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), sad.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");

    }//GEN-LAST:event_itemSadActionPerformed

    private void itemAngryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAngryActionPerformed
        // TODO add your handling code here:

        Reaccion angry = ManejoArchivos.getReactionByType(TipoDeReaccion.ANGRY);

        if (angry == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.ANGRY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            angry = ManejoArchivos.getReactionByType(TipoDeReaccion.ANGRY);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), angry.getIdReaction());

        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");


    }//GEN-LAST:event_itemAngryActionPerformed

    private void itemSurprisedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSurprisedActionPerformed
        // TODO add your handling code here:

        Reaccion surprised = ManejoArchivos.getReactionByType(TipoDeReaccion.SURPRISED);

        if (surprised == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.SURPRISED)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            surprised = ManejoArchivos.getReactionByType(TipoDeReaccion.SURPRISED);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), surprised.getIdReaction());

        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");



    }//GEN-LAST:event_itemSurprisedActionPerformed

    private void itemFunnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemFunnyActionPerformed
        // TODO add your handling code here:

        Reaccion funny = ManejoArchivos.getReactionByType(TipoDeReaccion.FUNNY);

        if (funny == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.FUNNY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            funny = ManejoArchivos.getReactionByType(TipoDeReaccion.FUNNY);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), funny.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
            
    }//GEN-LAST:event_itemFunnyActionPerformed

    private void buttonLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLikeActionPerformed
        // TODO add your handling code here:
        Reaccion like = ManejoArchivos.getReactionByType(TipoDeReaccion.LIKE);
        if (like == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.LIKE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            like = ManejoArchivos.getReactionByType(TipoDeReaccion.LIKE);
        }
        
        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), like.getIdReaction());
        
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
    }//GEN-LAST:event_buttonLikeActionPerformed

    private void buttonLoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoveActionPerformed
        // TODO add your handling code here:
        
        Reaccion love = ManejoArchivos.getReactionByType(TipoDeReaccion.LOVE);
        if (love == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.LOVE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            love = ManejoArchivos.getReactionByType(TipoDeReaccion.LOVE);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), love.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
    }//GEN-LAST:event_buttonLoveActionPerformed

    private void buttonTristeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTristeActionPerformed
        // TODO add your handling code here:
        
        Reaccion sad = ManejoArchivos.getReactionByType(TipoDeReaccion.SAD);
        if (sad == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.SAD)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            sad = ManejoArchivos.getReactionByType(TipoDeReaccion.SAD);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), sad.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
    }//GEN-LAST:event_buttonTristeActionPerformed

    private void buttonEnojadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnojadoActionPerformed
        // TODO add your handling code here:
        
        Reaccion angry = ManejoArchivos.getReactionByType(TipoDeReaccion.ANGRY);

        if (angry == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.ANGRY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            angry = ManejoArchivos.getReactionByType(TipoDeReaccion.ANGRY);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), angry.getIdReaction());

        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
    }//GEN-LAST:event_buttonEnojadoActionPerformed

    private void botonAsombroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAsombroActionPerformed
        // TODO add your handling code here:
        Reaccion surprised = ManejoArchivos.getReactionByType(TipoDeReaccion.SURPRISED);

        if (surprised == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.SURPRISED)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            surprised = ManejoArchivos.getReactionByType(TipoDeReaccion.SURPRISED);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), surprised.getIdReaction());

        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
    }//GEN-LAST:event_botonAsombroActionPerformed

    private void buttonRistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRistaActionPerformed
        // TODO add your handling code here:
        
        Reaccion funny = ManejoArchivos.getReactionByType(TipoDeReaccion.FUNNY);

        if (funny == null) {
            if(!ManejoArchivos.saveReactionByType(TipoDeReaccion.FUNNY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            funny = ManejoArchivos.getReactionByType(TipoDeReaccion.FUNNY);
        }

        ReaccionDePublicacion newPostReact = new ReaccionDePublicacion(this.post.getIdPost(), funny.getIdReaction());
        if (ManejoArchivos.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
        
    }//GEN-LAST:event_buttonRistaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAsombro;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonEnojado;
    private javax.swing.JButton buttonLike;
    private javax.swing.JButton buttonLove;
    private javax.swing.JButton buttonRista;
    private javax.swing.JButton buttonTriste;
    private javax.swing.JMenuItem itemAngry;
    private javax.swing.JMenuItem itemFunny;
    private javax.swing.JMenuItem itemLike;
    private javax.swing.JMenuItem itemLove;
    private javax.swing.JMenuItem itemSad;
    private javax.swing.JMenuItem itemSurprised;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelProfileName;
    private javax.swing.JLabel labelReactionsCount;
    private org.edisoncor.gui.panel.PanelImage panelImagePost;
    private javax.swing.JPopupMenu popupReaction;
    private javax.swing.JTextArea textDescription;
    // End of variables declaration//GEN-END:variables
}
