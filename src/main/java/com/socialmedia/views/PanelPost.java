package com.socialmedia.views;


import com.socialmedia.dao.Dao;
import com.socialmedia.domain.Image;
import com.socialmedia.domain.Post;
import com.socialmedia.domain.PostReaction;
import com.socialmedia.domain.Profile;
import com.socialmedia.domain.Reaction;
import com.socialmedia.domain.ReactionType;
import com.socialmedia.views.PanelImageRedondeado;
import com.socialmedia.views.RoundedPanel;
import java.awt.FlowLayout;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

public class PanelPost extends RoundedPanel {

    private Post post;
    
    private Profile profileLogged;
    private HomeWindow homeWindow;
    
    /**
     * Creates new form PanelPost
     */
    public PanelPost() {
        super(20);
        initComponents();
        
        this.popupReaction.setLayout(new BoxLayout(this.popupReaction, BoxLayout.X_AXIS));
    }
    
    public PanelPost(Post post, Profile profile, HomeWindow homeWindow) {
        super(20);
        initComponents();
        
        this.post = post;
        this.profileLogged = profile;
        this.homeWindow = homeWindow;
        this.popupReaction.setLayout(new BoxLayout(this.popupReaction, BoxLayout.X_AXIS));
        
        initData();
    }
    
    private void initData() {
        
        if (!profileLogged.getIdProfile().toString().equals(this.post.getProfileId().toString())) {
            this.buttonOptions.setVisible(false);
        }
        
        
        this.textDescription.setText(this.post.getDescription());
        
        Profile profilePost = Dao.getProfileById(this.post.getProfileId().toString());
        
        
        this.labelProfileName.setText(profilePost.getName() + " " + profilePost.getLastName());
        
        // Get the image
        Image postImage = Dao.getImagesByPostId(this.post.getIdPost().toString()).getFirst();
        
        //  Load image
        File foto = new File("images/" + postImage.getImage_path());
        
        try {
            byte[] fotoBytes = Files.readAllBytes(foto.toPath());
            
            this.panelImagePost.setIcon(new ImageIcon(fotoBytes));
            
            this.panelImagePost.revalidate();
            this.panelImagePost.repaint();
            
        } catch (IOException ex) {
            System.out.println("Error al obtener la imagen del arhivo");
        }
        
        // Init reactions
        initReactions();
        
        initProfilePostPic(profilePost);
    }
    
    // Method t load panel image profile
    private void initProfilePostPic(Profile profilePoster) {
        // Load image data
        
        // Load the profile image if exists
        // Get the profile image if exists
        if (profilePoster.getProfileImageId() != null) {
            Image image = Dao.getImageById(profilePoster.getProfileImageId().toString());
            
            File foto = new File("images/" + image.getImage_path());
            
            try {
                byte[] fotoBytes = Files.readAllBytes(foto.toPath());

                this.panelImageProfile.setIcon(new ImageIcon(fotoBytes));

                this.panelImageProfile.revalidate();
                this.panelImageProfile.repaint();

            } catch (IOException ex) {
                System.out.println("Error al obtener la imagen del arhivo");
            }
        }
    }
    
    private void initReactions() {
        
        List<PostReaction> postReactions = Dao.getPostReactionsByPostId(this.post.getIdPost().toString());
        
        this.labelReactionsCount.setText(postReactions.size() + " reacciones");
        
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupReaction = new javax.swing.JPopupMenu();
        itemLike = new javax.swing.JMenuItem();
        itemLove = new javax.swing.JMenuItem();
        itemSad = new javax.swing.JMenuItem();
        itemAngry = new javax.swing.JMenuItem();
        itemSurprised = new javax.swing.JMenuItem();
        itemFunny = new javax.swing.JMenuItem();
        popupOptions = new javax.swing.JPopupMenu();
        itemDelete = new javax.swing.JMenuItem();
        jPanel1 = new RoundedPanel(20);
        panelImageProfile = new PanelImageRedondeado();
        labelProfileName = new javax.swing.JLabel();
        buttonOptions = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescription = new javax.swing.JTextArea();
        panelImagePost = new org.edisoncor.gui.panel.PanelImage();
        buttonReact = new javax.swing.JButton();
        labelReactionsCount = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        itemLike.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon-like.png"))); // NOI18N
        itemLike.setPreferredSize(new java.awt.Dimension(45, 38));
        itemLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLikeActionPerformed(evt);
            }
        });
        popupReaction.add(itemLike);

        itemLove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/love-emoji.png"))); // NOI18N
        itemLove.setPreferredSize(new java.awt.Dimension(45, 38));
        itemLove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemLoveActionPerformed(evt);
            }
        });
        popupReaction.add(itemLove);

        itemSad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/sad-emoji.png"))); // NOI18N
        itemSad.setPreferredSize(new java.awt.Dimension(45, 38));
        itemSad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSadActionPerformed(evt);
            }
        });
        popupReaction.add(itemSad);

        itemAngry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/angry-emoji.png"))); // NOI18N
        itemAngry.setPreferredSize(new java.awt.Dimension(45, 38));
        itemAngry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAngryActionPerformed(evt);
            }
        });
        popupReaction.add(itemAngry);

        itemSurprised.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/surprise-emoji.png"))); // NOI18N
        itemSurprised.setPreferredSize(new java.awt.Dimension(45, 38));
        itemSurprised.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSurprisedActionPerformed(evt);
            }
        });
        popupReaction.add(itemSurprised);

        itemFunny.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/funny-emoji.png"))); // NOI18N
        itemFunny.setPreferredSize(new java.awt.Dimension(45, 38));
        itemFunny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemFunnyActionPerformed(evt);
            }
        });
        popupReaction.add(itemFunny);

        itemDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        itemDelete.setForeground(new java.awt.Color(153, 0, 0));
        itemDelete.setText("Eliminar Publicacion");
        itemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDeleteActionPerformed(evt);
            }
        });
        popupOptions.add(itemDelete);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelImageProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/DefaultPerson.jpg"))); // NOI18N

        javax.swing.GroupLayout panelImageProfileLayout = new javax.swing.GroupLayout(panelImageProfile);
        panelImageProfile.setLayout(panelImageProfileLayout);
        panelImageProfileLayout.setHorizontalGroup(
            panelImageProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        panelImageProfileLayout.setVerticalGroup(
            panelImageProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        labelProfileName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelProfileName.setForeground(new java.awt.Color(102, 102, 102));
        labelProfileName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelProfileName.setText("Nombre publicador");

        buttonOptions.setBackground(new java.awt.Color(255, 255, 255));
        buttonOptions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon-options.png"))); // NOI18N
        buttonOptions.setBorderPainted(false);
        buttonOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOptionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelImageProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelProfileName, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(buttonOptions)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelImageProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelProfileName, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(buttonOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        textDescription.setEditable(false);
        textDescription.setBackground(new java.awt.Color(255, 255, 255));
        textDescription.setColumns(20);
        textDescription.setForeground(new java.awt.Color(102, 102, 102));
        textDescription.setLineWrap(true);
        textDescription.setRows(5);
        textDescription.setText("Descripcion de la publicacion con algunos comentarios si quieren");
        jScrollPane1.setViewportView(textDescription);

        panelImagePost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/DefaultPostImage.png"))); // NOI18N

        javax.swing.GroupLayout panelImagePostLayout = new javax.swing.GroupLayout(panelImagePost);
        panelImagePost.setLayout(panelImagePostLayout);
        panelImagePostLayout.setHorizontalGroup(
            panelImagePostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelImagePostLayout.setVerticalGroup(
            panelImagePostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        buttonReact.setBackground(new java.awt.Color(255, 255, 255));
        buttonReact.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonReact.setForeground(new java.awt.Color(153, 153, 153));
        buttonReact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon-like.png"))); // NOI18N
        buttonReact.setText("Reaccionar");
        buttonReact.setBorderPainted(false);
        buttonReact.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonReact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReactActionPerformed(evt);
            }
        });

        labelReactionsCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelReactionsCount.setForeground(new java.awt.Color(153, 153, 153));
        labelReactionsCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelReactionsCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/default-emoji.png"))); // NOI18N
        labelReactionsCount.setText("5 reacciones");

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(panelImagePost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelReactionsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(buttonReact)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImagePost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelReactionsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonReact, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonReactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReactActionPerformed
        // TODO add your handling code here:
        
        this.popupReaction.show(this.buttonReact, 0, -this.buttonReact.getHeight());
        
    }//GEN-LAST:event_buttonReactActionPerformed

    private void buttonOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOptionsActionPerformed
        // TODO add your handling code here:
        this.popupOptions.show(this.buttonOptions, 0, this.buttonOptions.getHeight());
    }//GEN-LAST:event_buttonOptionsActionPerformed

    private void itemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDeleteActionPerformed
        // TODO add your handling code here:
        // Delete the post
        
        if(Dao.deletePost(this.post.getIdPost().toString())) {
            
            this.homeWindow.initHomeData();
            this.homeWindow.initMyPostsData();
            
            JOptionPane.showMessageDialog(null, "Publicacion eliminada con exito");
        } else {
            JOptionPane.showMessageDialog(null, "Error al eliminar la publicacion");
        }
        
    }//GEN-LAST:event_itemDeleteActionPerformed

    private void itemLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLikeActionPerformed
        // TODO add your handling code here:
        
        Reaction like = Dao.getReactionByType(ReactionType.LIKE);
        if (like == null) {
            if(!Dao.saveReactionByType(ReactionType.LIKE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            like = Dao.getReactionByType(ReactionType.LIKE);
        }
        
        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), like.getIdReaction());
        
        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");

        
    }//GEN-LAST:event_itemLikeActionPerformed

    private void itemLoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemLoveActionPerformed
        // TODO add your handling code here:

        Reaction love = Dao.getReactionByType(ReactionType.LOVE);
        if (love == null) {
            if(!Dao.saveReactionByType(ReactionType.LOVE)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            love = Dao.getReactionByType(ReactionType.LOVE);
        }

        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), love.getIdReaction());
        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
        

    }//GEN-LAST:event_itemLoveActionPerformed

    private void itemSadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSadActionPerformed
        // TODO add your handling code here:

        Reaction sad = Dao.getReactionByType(ReactionType.SAD);
        if (sad == null) {
            if(!Dao.saveReactionByType(ReactionType.SAD)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            sad = Dao.getReactionByType(ReactionType.SAD);
        }

        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), sad.getIdReaction());
        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");

    }//GEN-LAST:event_itemSadActionPerformed

    private void itemAngryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAngryActionPerformed
        // TODO add your handling code here:

        Reaction angry = Dao.getReactionByType(ReactionType.ANGRY);

        if (angry == null) {
            if(!Dao.saveReactionByType(ReactionType.ANGRY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            angry = Dao.getReactionByType(ReactionType.ANGRY);
        }

        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), angry.getIdReaction());

        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");


    }//GEN-LAST:event_itemAngryActionPerformed

    private void itemSurprisedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSurprisedActionPerformed
        // TODO add your handling code here:

        Reaction surprised = Dao.getReactionByType(ReactionType.SURPRISED);

        if (surprised == null) {
            if(!Dao.saveReactionByType(ReactionType.SURPRISED)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            surprised = Dao.getReactionByType(ReactionType.SURPRISED);
        }

        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), surprised.getIdReaction());

        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");



    }//GEN-LAST:event_itemSurprisedActionPerformed

    private void itemFunnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemFunnyActionPerformed
        // TODO add your handling code here:

        Reaction funny = Dao.getReactionByType(ReactionType.FUNNY);

        if (funny == null) {
            if(!Dao.saveReactionByType(ReactionType.FUNNY)) {
                JOptionPane.showMessageDialog(null, "Ocurrio un error al registrar la reaccion :(");
                return;
            }
            funny = Dao.getReactionByType(ReactionType.FUNNY);
        }

        PostReaction newPostReact = new PostReaction(this.post.getIdPost(), funny.getIdReaction());
        if (Dao.savePostReaction(newPostReact)) {
            this.initReactions();
        } else
            JOptionPane.showMessageDialog(null, "Lo siento, ha ocurrido un error al reaccionar. Intentalo mas tarde :(");
            
    }//GEN-LAST:event_itemFunnyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOptions;
    private javax.swing.JButton buttonReact;
    private javax.swing.JMenuItem itemAngry;
    private javax.swing.JMenuItem itemDelete;
    private javax.swing.JMenuItem itemFunny;
    private javax.swing.JMenuItem itemLike;
    private javax.swing.JMenuItem itemLove;
    private javax.swing.JMenuItem itemSad;
    private javax.swing.JMenuItem itemSurprised;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelProfileName;
    private javax.swing.JLabel labelReactionsCount;
    private org.edisoncor.gui.panel.PanelImage panelImagePost;
    private org.edisoncor.gui.panel.PanelImage panelImageProfile;
    private javax.swing.JPopupMenu popupOptions;
    private javax.swing.JPopupMenu popupReaction;
    private javax.swing.JTextArea textDescription;
    // End of variables declaration//GEN-END:variables
}
